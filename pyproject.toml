# Core build system configuration
[build-system]
# Required packages for building the project
requires = [
    "numpy>=2.0",
    "scikit-build-core>=0.3.3",
    "pybind11",
]
build-backend = "scikit_build_core.build"

[project]
# Basic project metadata
name = "qc-PyCI"
version = "0.6.1"
description = "PyCI: A flexible quantum chemistry CI library for Python 3."
authors = [{name = "QC-Devs Community", email = "qcdevs@gmail.com"}]
license = {file = "LICENSE"}
readme = "README.md"
# dynamic = ["version"]  # Version managed by setuptools_scm

# Project classification and requirements
keywords = [
    "quantum chemistry",
    "configuration interaction",
    "theoretical chemistry"
]

classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Science/Research",
    "Intended Audience :: Developers",
    "Topic :: Scientific/Engineering :: Chemistry",
    "Topic :: Scientific/Engineering :: Physics",
    "Topic :: Scientific/Engineering :: Mathematics",
    "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3",
    "Programming Language :: C++",
]
requires-python = ">=3.9"

# Core dependencies
dependencies = [
    "numpy>=2.0",    # Required for numerical operations
    "scipy>=1.0"     # Required for scientific computations
]

# Optional feature sets
[project.optional-dependencies]
test = [
    "pytest>=6.0",
    "pycodestyle",    # For code style checking
    "pydocstyle"      # For docstring style checking
]
doc = [
    "sphinx",         # Documentation generator
    "nbsphinx",       # Jupyter notebook support in Sphinx
    "sphinx_rtd_theme" # ReadTheDocs theme
]

# Project URLs
[project.urls]
Homepage = "https://github.com/theochem/pyci"
Source = "https://github.com/theochem/pyci"
Issues = "https://github.com/theochem/pyci/issues"
Documentation = "https://pyci.qcdevs.org/"

[tool.scikit-build]
wheel.expand-macos-universal-tags = true
minimum-version = "build-system.requires"

[tool.pytest.ini_options]
minversion = "8.0"
addopts = ["-ra", "--showlocals", "--strict-markers", "--strict-config"]
xfail_strict = true
log_cli_level = "INFO"
filterwarnings = [
  "error",
  "ignore::pytest.PytestCacheWarning",
]
testpaths = ["{project}/test"]

[tool.cibuildwheel]
build-frontend = "build[uv]"
test-command = "pytest {project}/test"
test-extras = ["test"]

[tool.cibuildwheel.pyodide]
environment.CFLAGS = "-fexceptions"
environment.LDFLAGS = "-fexceptions"
build-frontend = {name = "build", args = ["--exports", "whole_archive"]}

[tool.ruff]
target-version = "py39"

[tool.ruff.lint]
extend-select = [
  "B",   # flake8-bugbear
  "I",   # isort
  "ARG", # flake8-unused-arguments
  "C4",  # flake8-comprehensions
  "EM",  # flake8-errmsg
  "ICN", # flake8-import-conventions
  "G",   # flake8-logging-format
  "PGH", # pygrep-hooks
  "PIE", # flake8-pie
  "PL",  # pylint
  "PT",  # flake8-pytest-style
  "PTH", # flake8-use-pathlib
  "RET", # flake8-return
  "RUF", # Ruff-specific
  "SIM", # flake8-simplify
  "T20", # flake8-print
  "UP",  # pyupgrade
  "YTT", # flake8-2020
  "EXE", # flake8-executable
  "NPY", # NumPy-specific rules
]
